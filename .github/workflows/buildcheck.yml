# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: openjverein build check

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'plugin.xml'
      - 'build/**'
      - 'lib/**'
      - 'lib.src/**'
      - 'src/**'
jobs:
  build:
    name: Try to build a nightly release incorporating the current pull request

    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 11 for x64
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Check out jameica
      uses: actions/checkout@v4
      with:
        repository: willuhn/jameica
        path: jameica

    - name: Build jameica jar based on master
      working-directory: ./
      run: ant -noinput -buildfile jameica/build/build.xml jar

    - name: Check out hibiscus
      uses: actions/checkout@v4
      with:
        repository: willuhn/hibiscus
        path: hibiscus

    - name: Build hibiscus jar based on master
      working-directory: ./
      run: ant -noinput -buildfile hibiscus/build/build.xml jar

    - name: Checkout openjverein
      id: openjverein_checkout
      uses: actions/checkout@v4
      with:
        path: jverein
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Get PR SHA
      id: sha
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const { owner, repo, number } = context.issue;
          const pr = await github.rest.pulls.get({
            owner,
            repo,
            pull_number: number
          });
          return pr.data.head.sha 
          
    - name: Create Pending Status Check
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "pending",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Running",
            context: "test deployment"
          });

    - name: Build openjverein plugin
      id: buildtest
      continue-on-error: true
      working-directory: ./
      run: ant -e -noinput -buildfile jverein/build/build.xml compile

    - name: Create Unsuccessful Status Check
      if: ${{ steps.buildtest.outcome }} == 'failure'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "failure",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Failed",
            context: "test deployment"
          }); 
          
    - name: Create Successful Status Check
      if: ${{ steps.buildtest.outcome }} == 'success'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "success",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Passed",
            context: "test deployment"
          });
